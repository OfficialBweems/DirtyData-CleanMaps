#pull data from the internet
us <- getData("GADM",country="USA",level=1)
library(mapdata)
library(maps)
library(maptools)
library(ggmap)
library(ggrepel)
library(raster)
library(ggthemes)
library(ggsn)
library(rgeos)
library(rgdal)
library(tidyverse)
library(cowplot)
#pull data from the internet
us <- getData("GADM",country="USA",level=1)
#keep only Florida
states <- c('Florida')
us.states <- us[us$NAME_1 %in% states,]
#make the themes
fte_theme_map_small <- function(){
color.background = 'grey90'
color.grid.major = 'black'
color.axis.text = 'black'
color.axis.title = 'black'
color.title = 'black'
theme_bw(base_size = 9) +
theme(panel.background = element_rect(fill= 'white',color = 'white')) +
theme(plot.background = element_rect(fill = color.background, color = color.background)) +
theme(panel.border = element_rect(colour = 'black')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.ticks = element_blank()) +
theme(plot.title = element_text(color = color.title, size = 15, vjust = 1.25)) +
theme(axis.text.x = element_blank()) +
theme(axis.text.y = element_blank()) +
theme(axis.title.x = element_blank()) +
theme(axis.title.y = element_blank()) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(axis.line.x = element_line(color="black", size = 0.15),
axis.line.y = element_line(color="black", size = 0.15))
}
fte_theme_map_sites <- function(){
color.background = 'white'
color.grid.major = 'black'
color.axis.text = 'black'
color.axis.title = 'black'
color.title = 'black'
theme_bw(base_size = 9) +
theme(panel.background = element_rect(fill = 'white', color = 'white')) +
theme(plot.background = element_rect(fill=color.background,color = color.background)) +
theme(panel.border = element_rect(colour = 'black')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(axis.ticks = element_line(color="black", size = 0.15)) +
theme(plot.title = element_text(color = color.title, size = 15, vjust = 1.25)) +
theme(axis.text.x = element_text(size = 12, color = color.axis.text, angle = 90)) +
theme(axis.text.y = element_text(size = 12, color = color.axis.text)) +
theme(axis.title.x = element_text(size = 14, color = color.axis.title, vjust = 0)) +
theme(axis.title.y = element_text(size = 14, color = color.axis.title, vjust = 1.25)) +
theme(plot.title = element_blank()) +
theme(axis.line.x = element_line(color="black", size = 0.15),
axis.line.y = element_line(color="black", size = 0.15)) +
theme(legend.position = c(0.88, 0.28),
legend.background = element_rect(colour = 'black'),
legend.text = element_text(size = 10),
legend.title = element_text(size = 12))
}
#make larger map to put study area in context
continent = ggplot()+
geom_polygon(data = us,aes(x=long,y=lat,group=group), colour = 'grey40', #put in the acutal shape file
size = 0.01, fill = 'grey90')+
geom_polygon(data = us.states,aes(x=long,y=lat,group=group), colour = 'midnightblue', size = 0.01, #put in FL shapefile
fill = 'grey70')+
coord_cartesian(xlim = c(-93.9,-75.85), ylim = c(24.1,32.5)) + #delimit where we are
fte_theme_map_small() + #bring in the map
annotate("rect", xmin = -79, xmax = -82, ymin = 24.5, ymax = 25.5, alpha = .7)+ #shaded study area
annotate('text', x = -91, y = 25.8, label = 'Gulf of Mexico', size = 4)+
annotate('text', x = -78, y = 31.2, label = 'Atlantic Ocean', size = 4)+
annotate('text', x = -87, y = 27.8, label = 'Study Area', size = 5)+
annotate('segment',x=-87, y=27.28, xend=-82.2, yend=25.1, arrow=arrow(length = unit(0.04, "npc")), #arrow
alpha = 0.8, size=1.1, color="black")+
scalebar(x.min = -93, x.max = -85, y.min = 24.5, y.max = 25.5, dist = 250, dist_unit = 'km', st.size = 3.6, #add scalebar
transform = TRUE, model = 'WGS84', location = 'bottomleft', st.dist = 0.42, height = 0.18) #transform = TRUE assumes coordinates are in decimal degrees
continent
library(tidyverse)
Site= read.csv("Site_metadata.csv")
Site= read_csv("Site_metadata.csv")
library(tidyverse)
Site= read_csv("Site_metadata.csv")
setwd(C:\Users\15879\Documents\Github\DirtyData-CleanMaps\Data)
setwd(C:Users\15879\Documents\Github\DirtyData-CleanMaps\Data)
setwd(C:/Users/15879/Documents/Github/DirtyData-CleanMaps/Data)
setwd("C:/Users/15879/Documents/Github/DirtyData-CleanMaps/Data")
Site= read_csv("Site_metadata.csv")
site= read_csv("Site_metadata.csv")
transect = read.csv("Transects.csv")
species = read.csv("Species.csv")
str(site)
names(site)
View(Site)
names(transect)
names(species)
library(data.table)
setnames(site, "Site Length (m)", "Site_length_m")
names(site) #shows you the name of each column
setnames(site, "Site Width (m)", "Site_width_m")
names(sites)
names(site)
full_transect = left_join(species, transect, by= "Transect_id")
View(full_transect)
full_transect = left_join(species, transect, by= "Transect_id", copy=TRUE)
View(full_transect)
View(site)
View(transect)
View(species)
full_transect = inner_join(species, transect, by= "Transect_id", copy=TRUE)
rm(full_transect)
rm(Site)
9927+431
full_transect = left_join(species, transect, by= "Transect_id", copy=FALSE)
full_transect = left_join(species, transect)
rm(full_transect)
full_transect = left_join(species, transect)
rm(full_transect)
#transect data
transect = read.csv("Transects.csv")
names(transect)
full_transect = left_join(species, transect)
rm(full_transect)
full_transect = inner_join(species, transect)
View(full_transect)
rm(full_transect)
#Join data table together using a left join. we want to to make our "left" table
# the one with the most data. for this it will be our species data set
setDT(species)
setDT(transect)
full_transect = inner_join(species, transect)
rm(full_transect)
setkey(species, Transect_id)
setkey(transect, Transect_id)
Full_transect= species[transect]
rm(Full_transect)
Full_transect= transect[species]
is.na(x)
is.na(Full_transect)
Full_transect[!complete.cases(Full_transect),]
full_transect= na.omit(Full_transect)
rm(Full_transect)
rm(full_transect)
